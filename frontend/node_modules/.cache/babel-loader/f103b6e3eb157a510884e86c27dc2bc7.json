{"ast":null,"code":"var _jsxFileName = \"/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/components/DoubleSlider/Slider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from 'actions/productActions';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const productList = useSelector(state => state.productList);\n  const {\n    loading,\n    error,\n    products\n  } = productList;\n  useEffect(() => {\n    dispatch(listProducts());\n  }, [dispatch]);\n  const blackBurn = products && products.filter(item => item.brand === 'Black Burn');\n  const classes = useStyles();\n  const containerRef = useRef();\n  const imageHolderRef = useRef();\n  const detailsRef = useRef();\n  let slidesCount = blackBurn.length;\n  let activeSlideIndex = 0;\n\n  function changeSlide(direction) {\n    if (direction === 'up') {\n      activeSlideIndex++;\n\n      if (activeSlideIndex === slidesCount) {\n        activeSlideIndex = 0;\n      }\n    } else if (direction === 'down') {\n      activeSlideIndex--;\n\n      if (activeSlideIndex < 0) {\n        activeSlideIndex = slidesCount - 1;\n      }\n    }\n\n    const height = containerRef.current.clientHeight;\n    console.log(height);\n    imageHolderRef.current.style.transform = `translateY(-${activeSlideIndex * height}px)`;\n    detailsRef.current.style.transform = `translateY(${activeSlideIndex * height}px)`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    ref: containerRef,\n    container: true,\n    mt: 12,\n    spacing: 2,\n    style: {\n      height: '500px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sidebar,\n      children: [blackBurn.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.imageHolder,\n        ref: imageHolderRef,\n        style: {\n          background: `url(${product.image}) no-repeat center/cover`,\n          width: '400px',\n          height: '400px'\n        }\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => changeSlide('down'),\n        children: \"DOWN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.detailSlider,\n      children: [blackBurn.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: detailsRef,\n        style: {\n          background: `url(${product.image}) no-repeat center/cover`,\n          width: '400px',\n          height: '400px'\n        }\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => changeSlide('down'),\n        children: \"UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"gspd8ci3Aa0JAUuu/8sVcdUvhdg=\", false, function () {\n  return [useDispatch, useSelector, useStyles];\n});\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/components/DoubleSlider/Slider.jsx"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","listProducts","Grid","Button","useStyles","Slider","dispatch","productList","state","loading","error","products","blackBurn","filter","item","brand","classes","containerRef","imageHolderRef","detailsRef","slidesCount","length","activeSlideIndex","changeSlide","direction","height","current","clientHeight","console","log","style","transform","sidebar","map","product","imageHolder","background","image","width","id","detailSlider"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from 'actions/productActions';\nimport Grid from '@mui/material/Grid'\nimport Button from '@mui/material/Button'\nimport useStyles from './styles'\nconst Slider = () => {\n  const dispatch = useDispatch();\n\n  const productList = useSelector(state => state.productList);\n  const { loading, error, products } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts())\n  }, [dispatch])\n  const blackBurn = products && products.filter((item) => item.brand === 'Black Burn');\n  const classes = useStyles()\n\n const containerRef = useRef()\n const imageHolderRef = useRef()\n const detailsRef = useRef()\n\n  let slidesCount = blackBurn.length\n\n  let activeSlideIndex = 0;\n\n  function changeSlide(direction) {\n    if (direction === 'up') {\n      activeSlideIndex++\n      if (activeSlideIndex === slidesCount) {\n        activeSlideIndex = 0;\n      }\n    }else if (direction === 'down') {\n      activeSlideIndex--\n      if (activeSlideIndex < 0) {\n        activeSlideIndex = slidesCount - 1;\n      }\n    }\n\n    const height = containerRef.current.clientHeight\n    console.log(height)\n\n    imageHolderRef.current.style.transform = `translateY(-${activeSlideIndex * height}px)`\n    detailsRef.current.style.transform = `translateY(${activeSlideIndex * height}px)`\n}\n\n  return (\n    <Grid ref={containerRef} container mt={12} spacing={2} style={{ height: '500px' }}>\n      <div className={classes.sidebar} >\n        {blackBurn.map((product) => (\n          <div className={classes.imageHolder} ref={imageHolderRef} style={{background: `url(${product.image}) no-repeat center/cover`, width:'400px', height:'400px'}} key={product.id} ></div>\n          ))}\n        <Button onClick={() => changeSlide('down')}>DOWN</Button>\n      </div>\n      <div className={classes.detailSlider}>\n      {blackBurn.map((product) => (\n          <div ref={detailsRef} style={{background: `url(${product.image}) no-repeat center/cover`, width:'400px', height:'400px'}} key={product.id}></div>\n          ))}\n      <Button onClick={() => changeSlide('down')}>UP</Button>\n      </div>\n    </Grid>\n  )\n};\n\nexport default Slider;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/LoginScreen/LoginScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../store/actions/userActions';\nimport Loader from '../../components/Loader';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport Container from '@mui/material/Container';\nimport TextField from '@mui/material/TextField';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport image from 'assets/detailBackground.jpg';\nimport useStyles from './styles';\nimport { useTranslations } from 'contexts/translation.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginScreen = _ref => {\n  _s();\n\n  let {\n    location,\n    history\n  } = _ref;\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    t,\n    lang\n  } = useTranslations();\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    userInfo\n  } = userLogin;\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.container,\n    style: {\n      background: `url(${image}) no-repeat center/cover`\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      className: classes.formController,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          bgcolor: 'secondary.main',\n          borderRadius: '0'\n        },\n        className: classes.logo,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.title,\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: submitHandler,\n        noValidate: true,\n        color: \"primary\",\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email \\u0410\\u0434\\u0440\\u0435\\u0441\",\n          name: \"email\",\n          autoComplete: \"email\",\n          autoFocus: true,\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          color: \"primary\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"link\",\n          style: {\n            width: '100%'\n          },\n          children: t('login_btn_text')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            mt: 4,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: redirect ? `/register?redirect=${redirect}` : '/register',\n              variant: \"body2\",\n              style: {\n                color: 'rgba(255, 255, 255, 0.6)'\n              },\n              children: 'У Вас еще нет аккаунта? Зарегистрироваться!'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginScreen, \"Quc+OI7+VzHNijkfBYiXaShDKlI=\", false, function () {\n  return [useStyles, useTranslations, useDispatch, useSelector];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/LoginScreen/LoginScreen.jsx"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","login","Loader","Box","Grid","Button","Avatar","Container","TextField","LockOutlinedIcon","image","useStyles","useTranslations","LoginScreen","location","history","classes","email","setEmail","password","setPassword","t","lang","dispatch","userLogin","state","loading","userInfo","redirect","search","split","push","submitHandler","e","preventDefault","container","background","formController","bgcolor","borderRadius","logo","title","mt","target","value","width","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../store/actions/userActions';\n\nimport Loader from '../../components/Loader';\n\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport Container from '@mui/material/Container';\nimport TextField from '@mui/material/TextField';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nimport image from 'assets/detailBackground.jpg';\nimport useStyles from './styles';\nimport { useTranslations } from 'contexts/translation.context';\n\nconst LoginScreen = ({ location, history }) => {\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { t, lang } = useTranslations();\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector(state => state.userLogin);\n  const { loading, userInfo } = userLogin;\n\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <Grid\n      container\n      className={classes.container}\n      style={{\n        background: `url(${image}) no-repeat center/cover`,\n      }}\n    >\n      <Container\n        component='main'\n        maxWidth='xs'\n        className={classes.formController}\n      >\n        <Avatar\n          sx={{ bgcolor: 'secondary.main', borderRadius: '0' }}\n          className={classes.logo}\n        >\n          <LockOutlinedIcon color='primary'/>\n        </Avatar>\n        <h3 className={classes.title}>Войти</h3>\n        {loading ? (\n          <Loader />\n        ) : (\n          <Box\n            component='form'\n            onSubmit={submitHandler}\n            noValidate\n            color='primary'\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin='normal'\n              required\n              fullWidth\n              id='email'\n              label='Email Адрес'\n              name='email'\n              autoComplete='email'\n              autoFocus\n              type='email'\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n            />\n            <TextField\n              margin='normal'\n              required\n              fullWidth\n              name='password'\n              label='Пароль'\n              type='password'\n              color='primary'\n              id='password'\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              autoComplete='current-password'\n            />\n            <Button\n              type='submit'\n              fullWidth\n              variant='link'\n              style={{ width: '100%' }}\n            >\n              {t('login_btn_text')}\n            </Button>\n            <Grid container>\n              <Grid item mt={4}>\n                <Link\n                  to={redirect ? `/register?redirect=${redirect}` : '/register'}\n                  variant='body2'\n                  style={{ color: 'rgba(255, 255, 255, 0.6)' }}\n                >\n                  {'У Вас еще нет аккаунта? Зарегистрироваться!'}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        )}\n      </Container>\n    </Grid>\n  );\n};\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}
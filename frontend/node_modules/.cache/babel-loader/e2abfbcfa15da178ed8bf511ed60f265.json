{"ast":null,"code":"import _regeneratorRuntime from\"/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{CART_ADD_ITEM,CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PAYMENT_METHOD}from'../constants/cartConstants';import{toast}from'react-toastify';export var addToCart=function addToCart(id,qty){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"/api/products/\".concat(id));case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;dispatch({type:CART_ADD_ITEM,payload:{product:data._id,name:data.name,image:data.image,price:data.price,countInStock:data.countInStock,qty:qty}});toast.success(\"\".concat(data.name,\" (\").concat(qty,\"qt) added to cart\"));localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems));case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};export var removeFromCart=function removeFromCart(id){return function(dispatch,getState){dispatch({type:CART_REMOVE_ITEM,payload:id});toast.success('Product removed from cart');localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems));};};export var saveShippingAddress=function saveShippingAddress(data){return function(dispatch){dispatch({type:CART_SAVE_SHIPPING_ADDRESS,payload:data});localStorage.setItem('shippingAddress',JSON.stringify(data));};};export var savePaymentMethod=function savePaymentMethod(data){return function(dispatch){dispatch({type:CART_SAVE_PAYMENT_METHOD,payload:data});localStorage.setItem('paymentMethod',JSON.stringify(data));};};","map":{"version":3,"sources":["/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/store/actions/cartActions.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","toast","addToCart","id","qty","dispatch","getState","get","data","type","payload","product","_id","name","image","price","countInStock","success","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","saveShippingAddress","savePaymentMethod"],"mappings":"mWAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,aADF,CAEEC,gBAFF,CAGEC,0BAHF,CAIEC,wBAJF,KAKO,4BALP,CAOA,OAASC,KAAT,KAAsB,gBAAtB,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,EAAD,CAAKC,GAAL,iGAAa,iBAAOC,QAAP,CAAiBC,QAAjB,kKACbV,CAAAA,KAAK,CAACW,GAAN,yBAA2BJ,EAA3B,EADa,uCAC5BK,IAD4B,kBAC5BA,IAD4B,CAEpCH,QAAQ,CAAC,CACPI,IAAI,CAAEZ,aADC,CAEPa,OAAO,CAAE,CACPC,OAAO,CAAEH,IAAI,CAACI,GADP,CAEPC,IAAI,CAAEL,IAAI,CAACK,IAFJ,CAGPC,KAAK,CAAEN,IAAI,CAACM,KAHL,CAIPC,KAAK,CAAEP,IAAI,CAACO,KAJL,CAKPC,YAAY,CAAER,IAAI,CAACQ,YALZ,CAMPZ,GAAG,CAAHA,GANO,CAFF,CAAD,CAAR,CAWAH,KAAK,CAACgB,OAAN,WAAiBT,IAAI,CAACK,IAAtB,cAA+BT,GAA/B,uBACAc,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBC,SAA/B,CAAlC,EAdoC,sDAAb,oEAAlB,CAiBP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAArB,EAAE,QAAI,UAACE,QAAD,CAAWC,QAAX,CAAwB,CAC1DD,QAAQ,CAAC,CACPI,IAAI,CAAEX,gBADC,CAEPY,OAAO,CAAEP,EAFF,CAAD,CAAR,CAIAF,KAAK,CAACgB,OAAN,CAAc,2BAAd,EACAC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBC,SAA/B,CAAlC,EACD,CAP+B,EAAzB,CASP,MAAO,IAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAjB,IAAI,QAAI,UAAAH,QAAQ,CAAI,CACrDA,QAAQ,CAAC,CACPI,IAAI,CAAEV,0BADC,CAEPW,OAAO,CAAEF,IAFF,CAAD,CAAR,CAKAU,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAwCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAxC,EACD,CAPsC,EAAhC,CASP,MAAO,IAAMkB,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAlB,IAAI,QAAI,UAAAH,QAAQ,CAAI,CACnDA,QAAQ,CAAC,CACPI,IAAI,CAAET,wBADC,CAEPU,OAAO,CAAEF,IAFF,CAAD,CAAR,CAKAU,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAsCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAtC,EACD,CAPoC,EAA9B","sourcesContent":["import axios from 'axios';\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants';\n\nimport { toast } from 'react-toastify'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  });\n  toast.success(`${data.name} (${qty}qt) added to cart`);\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  });\n  toast.success('Product removed from cart')\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  });\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};\n"]},"metadata":{},"sourceType":"module"}
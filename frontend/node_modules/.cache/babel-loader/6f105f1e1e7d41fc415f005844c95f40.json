{"ast":null,"code":"var _jsxFileName = \"/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/ShippingScreen/ShippingScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { saveShippingAddress } from 'actions/cartActions';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport CheckoutSteps from 'components/CheckoutSteps/CheckoutSteps';\nimport image from 'assets/detailBackground.jpg';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShippingScreen = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const classes = useStyles();\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [phone, setPhone] = useState(shippingAddress.phone);\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      address,\n      city,\n      phone\n    }));\n    history.push('/payment');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    column: true,\n    className: classes.container,\n    style: {\n      background: `url(${image}) no-repeat center/cover`\n    },\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          textAlign: 'center',\n          fontSize: '30px'\n        },\n        children: \"\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CheckoutSteps, {\n        step1: true,\n        step2: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      className: classes.formController,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: submitHandler,\n        noValidate: true,\n        color: \"primary\",\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"address\",\n          label: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0438\\u043B\\u0438 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0432\\u0435\\u0434\\u0435\\u043D\\u0438\\u044F\",\n          name: \"address\",\n          autoComplete: \"address\",\n          autoFocus: true,\n          type: \"text\",\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"city\",\n          label: \"\\u0413\\u043E\\u0440\\u043E\\u0434\",\n          type: \"text\",\n          color: \"primary\",\n          id: \"city\",\n          value: city,\n          onChange: e => setCity(e.target.value),\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"phone\",\n          label: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n          type: \"text\",\n          color: \"primary\",\n          id: \"phone\",\n          value: phone,\n          onChange: e => setPhone(e.target.value),\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"link\",\n          style: {\n            width: '100%'\n          },\n          children: \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShippingScreen, \"mvzMVV1wiMNAQvCzpfzpbBKAsoA=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = ShippingScreen;\nexport default ShippingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"sources":["/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/ShippingScreen/ShippingScreen.jsx"],"names":["React","useState","useSelector","useDispatch","saveShippingAddress","Box","Grid","Button","TextField","Container","Typography","CheckoutSteps","image","useStyles","ShippingScreen","history","classes","cart","state","shippingAddress","address","setAddress","city","setCity","phone","setPhone","dispatch","submitHandler","e","preventDefault","push","container","background","textAlign","fontSize","formController","mt","target","value","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { saveShippingAddress } from 'actions/cartActions';\n\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport CheckoutSteps from 'components/CheckoutSteps/CheckoutSteps';\n\nimport image from 'assets/detailBackground.jpg';\n\nimport useStyles from './styles';\n\nconst ShippingScreen = ({ history }) => {\n  const classes = useStyles();\n\n  const cart = useSelector(state => state.cart);\n  const { shippingAddress } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [phone, setPhone] = useState(shippingAddress.phone);\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, phone }));\n    history.push('/payment');\n  };\n  return (\n    <Grid\n      container\n      column\n      className={classes.container}\n      style={{\n        background: `url(${image}) no-repeat center/cover`,\n      }}\n    >\n      <Container maxWidth='md'>\n        <Typography style={{ textAlign: 'center', fontSize: '30px' }}>\n          Доставка\n        </Typography>\n        <CheckoutSteps step1 step2 />\n      </Container>\n      <Container\n        component='main'\n        maxWidth='xs'\n        className={classes.formController}\n      >\n        <Box\n          component='form'\n          onSubmit={submitHandler}\n          noValidate\n          color='primary'\n          sx={{ mt: 1 }}\n        >\n          <TextField\n            margin='normal'\n            required\n            fullWidth\n            id='address'\n            label='Адрес или название заведения'\n            name='address'\n            autoComplete='address'\n            autoFocus\n            type='text'\n            value={address}\n            onChange={e => setAddress(e.target.value)}\n          />\n          <TextField\n            margin='normal'\n            required\n            fullWidth\n            name='city'\n            label='Город'\n            type='text'\n            color='primary'\n            id='city'\n            value={city}\n            onChange={e => setCity(e.target.value)}\n            autoComplete='current-password'\n          />\n          <TextField\n            margin='normal'\n            required\n            fullWidth\n            name='phone'\n            label='Номер телефона'\n            type='text'\n            color='primary'\n            id='phone'\n            value={phone}\n            onChange={e => setPhone(e.target.value)}\n            autoComplete='current-password'\n          />\n          <Button\n            type='submit'\n            fullWidth\n            variant='link'\n            style={{ width: '100%' }}\n          >\n            Продолжить\n          </Button>\n        </Box>\n      </Container>\n    </Grid>\n  );\n};\n\nexport default ShippingScreen;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/ProductEditScreen/ProductEditScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PRODUCT_UPDATE_RESET } from 'constants/productConstants';\nimport { listProductDetails, updateProduct } from 'actions/productActions';\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Input from '@mui/material/Input';\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\nimport IconButton from '@mui/material/IconButton';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport imaage from 'assets/detailBackground.jpg';\nimport axios from 'axios';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductEditScreen = _ref => {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  const classes = useStyles();\n  const productId = match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push('/admin/productList');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [product, dispatch, productId, history, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      description\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    container: true,\n    className: classes.container,\n    style: {\n      background: `url(${imaage}) no-repeat center/cover`\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      className: classes.formController,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            bgcolor: 'secondary.main',\n            borderRadius: '0'\n          },\n          className: classes.logo,\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.title,\n          children: \"Edit Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n          children: errorUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 27\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          onSubmit: submitHandler,\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"given-name\",\n                name: \"firstName\",\n                required: true,\n                fullWidth: true,\n                id: \"firstName\",\n                label: \"\\u0418\\u043C\\u044F\",\n                type: \"name\",\n                value: name,\n                onChange: e => setName(e.target.value),\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"price\",\n                label: \"\\u0426\\u0435\\u043D\\u0430\",\n                type: \"number\",\n                name: \"price\",\n                autoComplete: \"price\",\n                value: price,\n                onChange: e => setPrice(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"icon-button-file\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"primary\",\n                  component: \"span\",\n                  children: /*#__PURE__*/_jsxDEV(PhotoCamera, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 5\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 3\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"brand\",\n                label: \"Brand\",\n                type: \"text\",\n                name: \"brand\",\n                autoComplete: \"brand\",\n                value: brand,\n                onChange: e => setBrand(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"countInStock\",\n                label: \"countInStock\",\n                type: \"number\",\n                name: \"countInStock\",\n                autoComplete: \"countInStock\",\n                value: countInStock,\n                onChange: e => setCountInStock(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"category\",\n                label: \"category\",\n                type: \"text\",\n                name: \"category\",\n                autoComplete: \"category\",\n                value: category,\n                onChange: e => setCategory(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"description\",\n                label: \"description\",\n                type: \"text\",\n                name: \"description\",\n                autoComplete: \"description\",\n                value: description,\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"link\",\n            style: {\n              width: '100%',\n              marginTop: '30px'\n            },\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"link\",\n            component: Link,\n            to: \"/admin/productList\",\n            style: {\n              width: '100%',\n              marginTop: '30px'\n            },\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductEditScreen, \"UZITt1+E+LPZGu5GTw3Z49GlfUU=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/ProductEditScreen/ProductEditScreen.jsx"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","PRODUCT_UPDATE_RESET","listProductDetails","updateProduct","Loader","Message","Box","Grid","Avatar","Button","Input","PhotoCamera","IconButton","TextField","Container","LockOutlinedIcon","imaage","axios","useStyles","ProductEditScreen","match","history","classes","productId","params","id","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","dispatch","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","push","_id","submitHandler","e","preventDefault","container","background","formController","display","flexDirection","alignItems","bgcolor","borderRadius","logo","title","mt","target","value","width","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,QAAqC,4BAArC;AACA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,wBAAlD;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,UAAtB;;;AAEA,MAAMC,iBAAiB,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAuB;AAChD,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AAEA,QAAMK,SAAS,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA/B;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB/B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgC,KAAD,EAAQC,QAAR,IAAoBjC,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACkC,KAAD,EAAQC,QAAR,IAAoBnC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoC,KAAD,EAAQC,QAAR,IAAoBrC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsC,QAAD,EAAWC,WAAX,IAA0BvC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACwC,YAAD,EAAeC,eAAf,IAAkCzC,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAAC0C,WAAD,EAAcC,cAAd,IAAgC3C,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC4C,SAAD,EAAYC,YAAZ,IAA4B7C,QAAQ,CAAC,KAAD,CAA1C;AAGA,QAAM8C,QAAQ,GAAG3C,WAAW,EAA5B;AAEA,QAAM4C,cAAc,GAAG3C,WAAW,CAAC4C,KAAK,IAAIA,KAAK,CAACD,cAAhB,CAAlC;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA8BJ,cAApC;AAEA,QAAMK,aAAa,GAAGhD,WAAW,CAAC4C,KAAK,IAAIA,KAAK,CAACI,aAAhB,CAAjC;AACA,QAAM;AACJH,IAAAA,OAAO,EAAEI,aADL;AAEJH,IAAAA,KAAK,EAAEI,WAFH;AAGJC,IAAAA,OAAO,EAAEC;AAHL,MAIFJ,aAJJ;AAMAnD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuD,aAAJ,EAAmB;AACjBV,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEpD;AAAR,OAAD,CAAR;AACAoB,MAAAA,OAAO,CAACiC,IAAR,CAAa,oBAAb;AACD,KAHD,MAGO;AACL,UAAI,CAACP,OAAO,CAACrB,IAAT,IAAiBqB,OAAO,CAACQ,GAAR,KAAgBhC,SAArC,EAAgD;AAC9CmB,QAAAA,QAAQ,CAACxC,kBAAkB,CAACqB,SAAD,CAAnB,CAAR;AACD,OAFD,MAEO;AACLI,QAAAA,OAAO,CAACoB,OAAO,CAACrB,IAAT,CAAP;AACAG,QAAAA,QAAQ,CAACkB,OAAO,CAACnB,KAAT,CAAR;AACAG,QAAAA,QAAQ,CAACgB,OAAO,CAACjB,KAAT,CAAR;AACAG,QAAAA,QAAQ,CAACc,OAAO,CAACf,KAAT,CAAR;AACAG,QAAAA,WAAW,CAACY,OAAO,CAACb,QAAT,CAAX;AACAG,QAAAA,eAAe,CAACU,OAAO,CAACX,YAAT,CAAf;AACAG,QAAAA,cAAc,CAACQ,OAAO,CAACT,WAAT,CAAd;AACD;AACF;AACF,GAjBQ,EAiBN,CAACS,OAAD,EAAUL,QAAV,EAAoBnB,SAApB,EAA+BF,OAA/B,EAAwC+B,aAAxC,CAjBM,CAAT;;AAmBA,QAAMI,aAAa,GAAGC,CAAC,IAAI;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAhB,IAAAA,QAAQ,CAACvC,aAAa,CAAC;AACrBoD,MAAAA,GAAG,EAAEhC,SADgB;AAErBG,MAAAA,IAFqB;AAGrBE,MAAAA,KAHqB;AAIrBE,MAAAA,KAJqB;AAKrBE,MAAAA,KALqB;AAMrBE,MAAAA,QANqB;AAOrBE,MAAAA,YAPqB;AAQrBE,MAAAA;AARqB,KAAD,CAAd,CAAR;AAUD,GAZD;;AAcA,sBACE,QAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAEhB,OAAO,CAACqC,SAFrB;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAG,OAAM5C,MAAO;AAA5B,KAHT;AAAA,2BAKE,QAAC,SAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,SAAS,EAAEM,OAAO,CAACuC,cAHrB;AAAA,6BAKE,QAAC,GAAD;AACE,QAAA,EAAE,EAAE;AACFC,UAAAA,OAAO,EAAE,MADP;AAEFC,UAAAA,aAAa,EAAE,QAFb;AAGFC,UAAAA,UAAU,EAAE;AAHV,SADN;AAAA,gCAOE,QAAC,MAAD;AACE,UAAA,EAAE,EAAE;AAAEC,YAAAA,OAAO,EAAE,gBAAX;AAA6BC,YAAAA,YAAY,EAAE;AAA3C,WADN;AAEE,UAAA,SAAS,EAAE5C,OAAO,CAAC6C,IAFrB;AAAA,iCAIE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAaE;AAAI,UAAA,SAAS,EAAE7C,OAAO,CAAC8C,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,EAcGnB,aAAa,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAdpB,EAeGC,WAAW,iBAAI,QAAC,OAAD;AAAA,oBAAUA;AAAV;AAAA;AAAA;AAAA;AAAA,gBAflB,EAgBGL,OAAO,gBACN,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADM,GAEJC,KAAK,gBACP,QAAC,OAAD;AAAA,oBAAUA;AAAV;AAAA;AAAA;AAAA;AAAA,gBADO,gBAGP,QAAC,GAAD;AACE,UAAA,SAAS,EAAC,MADZ;AAEE,UAAA,UAAU,MAFZ;AAGE,UAAA,QAAQ,EAAEU,aAHZ;AAIE,UAAA,EAAE,EAAE;AAAEa,YAAAA,EAAE,EAAE;AAAN,WAJN;AAAA,kCAME,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,YAAY,EAAC,YADf;AAEE,gBAAA,IAAI,EAAC,WAFP;AAGE,gBAAA,QAAQ,MAHV;AAIE,gBAAA,SAAS,MAJX;AAKE,gBAAA,EAAE,EAAC,WALL;AAME,gBAAA,KAAK,EAAC,oBANR;AAOE,gBAAA,IAAI,EAAC,MAPP;AAQE,gBAAA,KAAK,EAAE3C,IART;AASE,gBAAA,QAAQ,EAAE+B,CAAC,IAAI9B,OAAO,CAAC8B,CAAC,CAACa,MAAF,CAASC,KAAV,CATxB;AAUE,gBAAA,SAAS;AAVX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAeE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,SAAS,MAFX;AAGE,gBAAA,EAAE,EAAC,OAHL;AAIE,gBAAA,KAAK,EAAC,0BAJR;AAKE,gBAAA,IAAI,EAAC,QALP;AAME,gBAAA,IAAI,EAAC,OANP;AAOE,gBAAA,YAAY,EAAC,OAPf;AAQE,gBAAA,KAAK,EAAE3C,KART;AASE,gBAAA,QAAQ,EAAE6B,CAAC,IAAI5B,QAAQ,CAAC4B,CAAC,CAACa,MAAF,CAASC,KAAV;AATzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAfF,eA4BE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACA;AAAO,gBAAA,OAAO,EAAC,kBAAf;AAAA,uCACd,QAAC,UAAD;AAAY,kBAAA,KAAK,EAAC,SAAlB;AAA4B,kBAAA,SAAS,EAAC,MAAtC;AAAA,yCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADc;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBA5BF,eAmCE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,SAAS,MAFX;AAGE,gBAAA,EAAE,EAAC,OAHL;AAIE,gBAAA,KAAK,EAAC,OAJR;AAKE,gBAAA,IAAI,EAAC,MALP;AAME,gBAAA,IAAI,EAAC,OANP;AAOE,gBAAA,YAAY,EAAC,OAPf;AAQE,gBAAA,KAAK,EAAEvC,KART;AASE,gBAAA,QAAQ,EAAEyB,CAAC,IAAIxB,QAAQ,CAACwB,CAAC,CAACa,MAAF,CAASC,KAAV;AATzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAnCF,eAgDE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,SAAS,MAFX;AAGE,gBAAA,EAAE,EAAC,cAHL;AAIE,gBAAA,KAAK,EAAC,cAJR;AAKE,gBAAA,IAAI,EAAC,QALP;AAME,gBAAA,IAAI,EAAC,cANP;AAOE,gBAAA,YAAY,EAAC,cAPf;AAQE,gBAAA,KAAK,EAAEnC,YART;AASE,gBAAA,QAAQ,EAAEqB,CAAC,IAAIpB,eAAe,CAACoB,CAAC,CAACa,MAAF,CAASC,KAAV;AAThC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAhDF,eA6DE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,SAAS,MAFX;AAGE,gBAAA,EAAE,EAAC,UAHL;AAIE,gBAAA,KAAK,EAAC,UAJR;AAKE,gBAAA,IAAI,EAAC,MALP;AAME,gBAAA,IAAI,EAAC,UANP;AAOE,gBAAA,YAAY,EAAC,UAPf;AAQE,gBAAA,KAAK,EAAErC,QART;AASE,gBAAA,QAAQ,EAAEuB,CAAC,IAAItB,WAAW,CAACsB,CAAC,CAACa,MAAF,CAASC,KAAV;AAT5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA7DF,eA0EE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,SAAS,MAFX;AAGE,gBAAA,EAAE,EAAC,aAHL;AAIE,gBAAA,KAAK,EAAC,aAJR;AAKE,gBAAA,IAAI,EAAC,MALP;AAME,gBAAA,IAAI,EAAC,aANP;AAOE,gBAAA,YAAY,EAAC,aAPf;AAQE,gBAAA,KAAK,EAAEjC,WART;AASE,gBAAA,QAAQ,EAAEmB,CAAC,IAAIlB,cAAc,CAACkB,CAAC,CAACa,MAAF,CAASC,KAAV;AAT/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA1EF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eA8FE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,MAFX;AAGE,YAAA,OAAO,EAAC,MAHV;AAIE,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,MAAT;AAAiBC,cAAAA,SAAS,EAAE;AAA5B,aAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9FF,eAsGE,QAAC,MAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,OAAO,EAAC,MAFV;AAGE,YAAA,SAAS,EAAE3E,IAHb;AAIE,YAAA,EAAE,EAAC,oBAJL;AAKE,YAAA,KAAK,EAAE;AAAE0E,cAAAA,KAAK,EAAE,MAAT;AAAiBC,cAAAA,SAAS,EAAE;AAA5B,aALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtGF;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAqJD,CAjND;;GAAMtD,iB;UACYD,S,EAcCnB,W,EAEMC,W,EAGDA,W;;;KApBlBmB,iB;AAmNN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PRODUCT_UPDATE_RESET } from 'constants/productConstants';\nimport { listProductDetails, updateProduct } from 'actions/productActions';\n\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\n\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Input from '@mui/material/Input';\nimport PhotoCamera from '@mui/icons-material/PhotoCamera'\nimport IconButton from '@mui/material/IconButton';\n\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nimport imaage from 'assets/detailBackground.jpg';\n\nimport axios from 'axios';\n\nimport useStyles from './styles';\n\nconst ProductEditScreen = ({ match, history }) => {\n  const classes = useStyles();\n\n  const productId = match.params.id;\n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector(state => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push('/admin/productList');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [product, dispatch, productId, history, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      description\n    }))\n  };\n\n  return (\n    <Container\n      container\n      className={classes.container}\n      style={{ background: `url(${imaage}) no-repeat center/cover` }}\n    >\n      <Container\n        component='main'\n        maxWidth='xs'\n        className={classes.formController}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar\n            sx={{ bgcolor: 'secondary.main', borderRadius: '0' }}\n            className={classes.logo}\n          >\n            <LockOutlinedIcon />\n          </Avatar>\n          <h3 className={classes.title}>Edit Product</h3>\n          {loadingUpdate && <Loader/>}\n          {errorUpdate && <Message>{errorUpdate}</Message>}\n          {loading ? (\n            <Loader />\n          ) : error ? (\n            <Message>{error}</Message>\n          ) : (\n            <Box\n              component='form'\n              noValidate\n              onSubmit={submitHandler}\n              sx={{ mt: 3 }}\n            >\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete='given-name'\n                    name='firstName'\n                    required\n                    fullWidth\n                    id='firstName'\n                    label='Имя'\n                    type='name'\n                    value={name}\n                    onChange={e => setName(e.target.value)}\n                    autoFocus\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    id='price'\n                    label='Цена'\n                    type='number'\n                    name='price'\n                    autoComplete='price'\n                    value={price}\n                    onChange={e => setPrice(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                <label htmlFor=\"icon-button-file\">\n  <IconButton color=\"primary\" component=\"span\">\n    <PhotoCamera />\n  </IconButton>\n</label>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    id='brand'\n                    label='Brand'\n                    type='text'\n                    name='brand'\n                    autoComplete='brand'\n                    value={brand}\n                    onChange={e => setBrand(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    id='countInStock'\n                    label='countInStock'\n                    type='number'\n                    name='countInStock'\n                    autoComplete='countInStock'\n                    value={countInStock}\n                    onChange={e => setCountInStock(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    id='category'\n                    label='category'\n                    type='text'\n                    name='category'\n                    autoComplete='category'\n                    value={category}\n                    onChange={e => setCategory(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    id='description'\n                    label='description'\n                    type='text'\n                    name='description'\n                    autoComplete='description'\n                    value={description}\n                    onChange={e => setDescription(e.target.value)}\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type='submit'\n                fullWidth\n                variant='link'\n                style={{ width: '100%', marginTop: '30px' }}\n              >\n                Update\n              </Button>\n              <Button\n                fullWidth\n                variant='link'\n                component={Link}\n                to='/admin/productList'\n                style={{ width: '100%', marginTop: '30px' }}\n              >\n                Go Back\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </Container>\n    </Container>\n  );\n};\n\nexport default ProductEditScreen;\n"]},"metadata":{},"sourceType":"module"}
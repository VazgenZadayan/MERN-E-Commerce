{"ast":null,"code":"var _jsxFileName = \"/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/RegistrationScreen/RegistrationScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userRegisterAction } from 'store/actions/userActions';\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\nimport { registerValidationSchema } from 'hooks/validator';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport image from 'assets/detailBackground.jpg';\nimport useStyles from './styles';\nimport { useTranslations } from 'contexts/translation.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrationScreen = _ref => {\n  _s();\n\n  var _errors$name, _errors$email, _errors$password, _errors$confirmPasswo;\n\n  let {\n    location,\n    history\n  } = _ref;\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslations();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(registerValidationSchema)\n  });\n  console.log('errors:::', errors);\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userRegister;\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = _ref2 => {\n    let {\n      name,\n      email,\n      password\n    } = _ref2;\n    dispatch(userRegisterAction(name, email, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.container,\n    style: {\n      background: `url(${image}) no-repeat center/cover`\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      className: classes.formController,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            bgcolor: 'secondary.main',\n            borderRadius: '0'\n          },\n          className: classes.logo,\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.title,\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          onSubmit: handleSubmit(submitHandler),\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"given-name\",\n                name: \"firstName\",\n                required: true,\n                fullWidth: true,\n                id: \"firstName\",\n                label: t('name'),\n                type: \"name\",\n                autoFocus: true,\n                ...register('name'),\n                error: (errors === null || errors === void 0 ? void 0 : errors.name) ? true : false,\n                helperText: (errors === null || errors === void 0 ? void 0 : errors.name) && ((_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"email\",\n                label: t('email_address'),\n                type: \"email\",\n                name: \"email\",\n                autoComplete: \"email\",\n                ...register('email'),\n                error: (errors === null || errors === void 0 ? void 0 : errors.email) ? true : false,\n                helperText: (errors === null || errors === void 0 ? void 0 : errors.email) && ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: t('password'),\n                type: \"password\",\n                id: \"password\",\n                autoComplete: \"on\",\n                ...register('password'),\n                error: (errors === null || errors === void 0 ? void 0 : errors.password) ? true : false,\n                helperText: (errors === null || errors === void 0 ? void 0 : errors.password) && ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"confirmPassword\",\n                label: t('confirm_password'),\n                type: \"password\",\n                autoComplete: \"on\",\n                ...register('confirmPassword'),\n                error: (errors === null || errors === void 0 ? void 0 : errors.confirmPassword) ? true : false,\n                helperText: (errors === null || errors === void 0 ? void 0 : errors.confirmPassword) && ((_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"link\",\n            style: {\n              width: '100%',\n              marginTop: '30px'\n            },\n            children: t('sign_up')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                marginTop: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: redirect ? `/login?redirect=${redirect}` : '/login',\n                variant: \"body2\",\n                style: {\n                  color: 'white'\n                },\n                children: t('already_have_account')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationScreen, \"Dq8MCh4eMcfKd+/cP2V/Dpuarwc=\", false, function () {\n  return [useStyles, useTranslations, useForm, useDispatch, useSelector];\n});\n\n_c = RegistrationScreen;\nexport default RegistrationScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationScreen\");","map":{"version":3,"sources":["/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/RegistrationScreen/RegistrationScreen.jsx"],"names":["React","useEffect","Link","useDispatch","useSelector","userRegisterAction","Loader","Message","registerValidationSchema","yupResolver","useForm","Box","Grid","Avatar","Button","TextField","Container","LockOutlinedIcon","image","useStyles","useTranslations","RegistrationScreen","location","history","classes","t","register","handleSubmit","formState","errors","mode","resolver","console","log","dispatch","userRegister","state","loading","error","userInfo","redirect","search","split","push","submitHandler","name","email","password","container","background","formController","display","flexDirection","alignItems","bgcolor","borderRadius","logo","title","mt","message","confirmPassword","width","marginTop","color"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userRegisterAction } from 'store/actions/userActions';\n\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\n\nimport { registerValidationSchema } from 'hooks/validator';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\n\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nimport image from 'assets/detailBackground.jpg';\n\nimport useStyles from './styles';\nimport { useTranslations } from 'contexts/translation.context';\n\nconst RegistrationScreen = ({ location, history }) => {\n  const classes = useStyles();\n  const { t } = useTranslations();\n \n  const { register, handleSubmit, formState: {errors} } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(registerValidationSchema)\n  });\n\n  console.log('errors:::', errors)\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector(state => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = ({name, email, password}) => {\n      dispatch(userRegisterAction(name, email, password));\n  };\n\n  return (\n    <Container\n      className={classes.container}\n      style={{ background: `url(${image}) no-repeat center/cover` }}\n    >\n      <Container\n        component='main'\n        maxWidth='xs'\n        className={classes.formController}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar\n            sx={{ bgcolor: 'secondary.main', borderRadius: '0' }}\n            className={classes.logo}\n          >\n            <LockOutlinedIcon />\n          </Avatar>\n          <h3 className={classes.title}>Sign up</h3>\n          {error && <Message variant='danger'>{error}</Message>}\n          {loading && <Loader />}\n          <Box\n            component='form'\n            noValidate\n            onSubmit={(handleSubmit(submitHandler))}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete='given-name'\n                  name='firstName'\n                  required\n                  fullWidth\n                  id='firstName'\n                  label={t('name')}\n                  type='name'\n                  autoFocus\n                  {...register('name')}\n                  error={errors?.name ? true : false}\n                  helperText={errors?.name && errors.name?.message}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id='email'\n                  label={t('email_address')}\n                  type='email'\n                  name='email'\n                  autoComplete='email'\n                  {...register('email')}\n                  error={errors?.email ? true : false}\n                  helperText={errors?.email && errors.email?.message}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name='password'\n                  label={t('password')}\n                  type='password'\n                  id='password'\n                  autoComplete='on'\n                  {...register('password')}\n                  error={errors?.password ? true : false}\n                  helperText={errors?.password && errors.password?.message}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id='confirmPassword'\n                  label={t('confirm_password')}\n                  type='password'\n                  autoComplete='on'\n                  {...register('confirmPassword')}\n                  error={errors?.confirmPassword ? true : false}\n                  helperText={errors?.confirmPassword && errors.confirmPassword?.message}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type='submit'\n              fullWidth\n              variant='link'\n              style={{ width: '100%', marginTop: '30px' }}\n            >\n              {t('sign_up')}\n            </Button>\n            <Grid container justifyContent='flex-end'>\n              <Grid item style={{ marginTop: '10px' }}>\n                <Link\n                  to={redirect ? `/login?redirect=${redirect}` : '/login'}\n                  variant='body2'\n                  style={{ color: 'white' }}\n                >\n                  {t('already_have_account')}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </Container>\n  );\n};\n\nexport default RegistrationScreen;\n"]},"metadata":{},"sourceType":"module"}
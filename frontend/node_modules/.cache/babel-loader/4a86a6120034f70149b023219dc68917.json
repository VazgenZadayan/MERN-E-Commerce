{"ast":null,"code":"var _jsxFileName = \"/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/ProductsListScreen/ProductsListScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport sortProducts from 'utils/helpers';\nimport ProductCart from 'components/ProductCard/ProductCard';\nimport Tab from '@mui/material/Tab';\nimport Grid from '@mui/material/Grid';\nimport Tabs from '@mui/material/Tabs';\nimport Container from '@mui/material/Container';\nimport useStyles from './styles';\nimport { useTranslations } from 'contexts/translation.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductsListScreen = _ref => {\n  _s();\n\n  let {\n    products,\n    loading\n  } = _ref;\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslations();\n  const [brand, setBrand] = useState(0);\n  const sortedProducts = sortProducts(products);\n  const productsEntries = Object.entries(sortedProducts);\n\n  const handleChange = (_, index) => {\n    setBrand(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.container,\n    children: productsEntries.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.catalog,\n        children: t('catalog')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        value: brand,\n        indicatorColor: \"primary\",\n        variant: \"scrollable\",\n        textColor: \"primary\",\n        scrollButtons: true,\n        allowScrollButtonsMobile: true,\n        onChange: handleChange,\n        className: classes.tabs,\n        children: productsEntries === null || productsEntries === void 0 ? void 0 : productsEntries.map(_ref2 => {\n          let [key] = _ref2;\n          return /*#__PURE__*/_jsxDEV(Tab, {\n            component: \"span\",\n            id: key,\n            icon: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 6,\n        rowSpacing: 17,\n        style: {\n          padding: '60px 50px 0 70px'\n        },\n        children: productsEntries[brand][1].map(product => /*#__PURE__*/_jsxDEV(ProductCart, {\n          product: product,\n          loading: loading\n        }, product._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductsListScreen, \"9Sp3nUMvphrVM2GXwpS/WcZCmno=\", false, function () {\n  return [useStyles, useTranslations];\n});\n\n_c = ProductsListScreen;\nexport default ProductsListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsListScreen\");","map":{"version":3,"sources":["/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/ProductsListScreen/ProductsListScreen.jsx"],"names":["React","useState","sortProducts","ProductCart","Tab","Grid","Tabs","Container","useStyles","useTranslations","ProductsListScreen","products","loading","classes","t","brand","setBrand","sortedProducts","productsEntries","Object","entries","handleChange","_","index","container","length","catalog","tabs","map","key","padding","product","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,YAAP,MAAyB,eAAzB;AAEA,OAAOC,WAAP,MAAwB,oCAAxB;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,eAAT,QAAgC,8BAAhC;;;;AAEA,MAAMC,kBAAkB,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA0B;AACpD,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAQL,eAAe,EAA7B;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMgB,cAAc,GAAGf,YAAY,CAACS,QAAD,CAAnC;AACA,QAAMO,eAAe,GAAGC,MAAM,CAACC,OAAP,CAAeH,cAAf,CAAxB;;AACA,QAAMI,YAAY,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACjCP,IAAAA,QAAQ,CAACO,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAEV,OAAO,CAACW,SAA9B;AAAA,cACGN,eAAe,CAACO,MAAhB,GAAyB,CAAzB,iBACC;AAAA,8BACE;AAAG,QAAA,SAAS,EAAEZ,OAAO,CAACa,OAAtB;AAAA,kBAAgCZ,CAAC,CAAC,SAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AACE,QAAA,KAAK,EAAEC,KADT;AAEE,QAAA,cAAc,EAAC,SAFjB;AAGE,QAAA,OAAO,EAAC,YAHV;AAIE,QAAA,SAAS,EAAC,SAJZ;AAKE,QAAA,aAAa,MALf;AAME,QAAA,wBAAwB,MAN1B;AAOE,QAAA,QAAQ,EAAEM,YAPZ;AAQE,QAAA,SAAS,EAAER,OAAO,CAACc,IARrB;AAAA,kBAUGT,eAVH,aAUGA,eAVH,uBAUGA,eAAe,CAAEU,GAAjB,CAAqB;AAAA,cAAC,CAACC,GAAD,CAAD;AAAA,8BACpB,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,MAAf;AAAgC,YAAA,EAAE,EAAEA,GAApC;AAAyC,YAAA,IAAI,EAAEA;AAA/C,aAA2BA,GAA3B;AAAA;AAAA;AAAA;AAAA,kBADoB;AAAA,SAArB;AAVH;AAAA;AAAA;AAAA;AAAA,cAFF,eAgBE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAE,CAFX;AAGE,QAAA,UAAU,EAAE,EAHd;AAIE,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAJT;AAAA,kBAMGZ,eAAe,CAACH,KAAD,CAAf,CAAuB,CAAvB,EAA0Ba,GAA1B,CAA8BG,OAAO,iBACpC,QAAC,WAAD;AACE,UAAA,OAAO,EAAEA,OADX;AAGE,UAAA,OAAO,EAAEnB;AAHX,WAEOmB,OAAO,CAACC,GAFf;AAAA;AAAA;AAAA;AAAA,gBADD;AANH;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CAhDD;;GAAMtB,kB;UACYF,S,EACFC,e;;;KAFVC,kB;AAkDN,eAAeA,kBAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport sortProducts from 'utils/helpers';\n\nimport ProductCart from 'components/ProductCard/ProductCard';\n\nimport Tab from '@mui/material/Tab';\nimport Grid from '@mui/material/Grid';\nimport Tabs from '@mui/material/Tabs';\nimport Container from '@mui/material/Container';\n\nimport useStyles from './styles';\nimport { useTranslations } from 'contexts/translation.context';\n\nconst ProductsListScreen = ({ products, loading }) => {\n  const classes = useStyles();\n  const { t } = useTranslations();\n\n  const [brand, setBrand] = useState(0);\n  const sortedProducts = sortProducts(products);\n  const productsEntries = Object.entries(sortedProducts);\n  const handleChange = (_, index) => {\n    setBrand(index);\n  };\n\n  return (\n    <Container className={classes.container}>\n      {productsEntries.length > 0 && (\n        <>\n          <p className={classes.catalog}>{t('catalog')}</p>\n          <Tabs\n            value={brand}\n            indicatorColor='primary'\n            variant='scrollable'\n            textColor='primary'\n            scrollButtons\n            allowScrollButtonsMobile\n            onChange={handleChange}\n            className={classes.tabs}\n          >\n            {productsEntries?.map(([key]) => (\n              <Tab component='span' key={key} id={key} icon={key} />\n            ))}\n          </Tabs>\n          <Grid\n            container\n            spacing={6}\n            rowSpacing={17}\n            style={{ padding: '60px 50px 0 70px' }}\n          >\n            {productsEntries[brand][1].map(product => (\n              <ProductCart\n                product={product}\n                key={product._id}\n                loading={loading}\n              />\n            ))}\n          </Grid>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default ProductsListScreen;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer } from 'store/reducers/productReducers';\nimport { cartReducer } from 'store/reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userListReducer, userDeleteReducer, userUpdateReducer } from 'store/reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer, orderListMyReducer, orderListReducer } from 'store/reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: paymentMethodFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/store/store.js"],"names":["thunk","composeWithDevTools","createStore","combineReducers","applyMiddleware","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderDeliverReducer","orderListMyReducer","orderListReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","cart","userLogin","userRegister","userDetails","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","paymentMethodFromStorage","initialState","cartItems","shippingAddress","paymentMethod","userInfo","middleware","store"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,oBALF,QAMO,gCANP;AAOA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,eAJF,EAKEC,iBALF,EAMEC,iBANF,QAOO,6BAPP;AAQA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,mBAJF,EAKEC,kBALF,EAMEC,gBANF,QAOO,8BAPP;AASA,MAAMC,OAAO,GAAGpB,eAAe,CAAC;AAC9BqB,EAAAA,WAAW,EAAEnB,kBADiB;AAE9BoB,EAAAA,cAAc,EAAEnB,qBAFc;AAG9BoB,EAAAA,aAAa,EAAEnB,oBAHe;AAI9BoB,EAAAA,aAAa,EAAEnB,oBAJe;AAK9BoB,EAAAA,aAAa,EAAEnB,oBALe;AAM9BoB,EAAAA,IAAI,EAAEnB,WANwB;AAO9BoB,EAAAA,SAAS,EAAEnB,gBAPmB;AAQ9BoB,EAAAA,YAAY,EAAEnB,mBARgB;AAS9BoB,EAAAA,WAAW,EAAEnB,kBATiB;AAU9BoB,EAAAA,QAAQ,EAAEnB,eAVoB;AAW9BoB,EAAAA,UAAU,EAAEnB,iBAXkB;AAY9BoB,EAAAA,UAAU,EAAEnB,iBAZkB;AAa9BoB,EAAAA,WAAW,EAAEnB,kBAbiB;AAc9BoB,EAAAA,YAAY,EAAEnB,mBAdgB;AAe9BoB,EAAAA,QAAQ,EAAEnB,eAfoB;AAgB9BoB,EAAAA,YAAY,EAAEnB,mBAhBgB;AAiB9BoB,EAAAA,WAAW,EAAEnB,kBAjBiB;AAkB9BoB,EAAAA,SAAS,EAAEnB;AAlBmB,CAAD,CAA/B;AAqBA,MAAMoB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAIA,MAAMK,wBAAwB,GAAGN,YAAY,CAACC,OAAb,CAAqB,eAArB,IAC7BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CAD6B,GAE7B,EAFJ;AAIA,MAAMM,YAAY,GAAG;AACnBrB,EAAAA,IAAI,EAAE;AACJsB,IAAAA,SAAS,EAAET,oBADP;AAEJU,IAAAA,eAAe,EAAEJ,0BAFb;AAGJK,IAAAA,aAAa,EAAEJ;AAHX,GADa;AAMnBnB,EAAAA,SAAS,EAAE;AAAEwB,IAAAA,QAAQ,EAAEP;AAAZ;AANQ,CAArB;AASA,MAAMQ,UAAU,GAAG,CAACvD,KAAD,CAAnB;AAEA,MAAMwD,KAAK,GAAGtD,WAAW,CACvBqB,OADuB,EAEvB2B,YAFuB,EAGvBjD,mBAAmB,CAACG,eAAe,CAAC,GAAGmD,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n} from 'store/reducers/productReducers';\nimport { cartReducer } from 'store/reducers/cartReducers';\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from 'store/reducers/userReducers';\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from 'store/reducers/orderReducers';\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {};\n\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod')\n  ? JSON.parse(localStorage.getItem('paymentMethod'))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: paymentMethodFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n\n"]},"metadata":{},"sourceType":"module"}
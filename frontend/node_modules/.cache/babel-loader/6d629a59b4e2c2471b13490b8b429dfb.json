{"ast":null,"code":"var _jsxFileName = \"/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/ShippingScreen/ShippingScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useStyles from './styles';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport image from 'assets/detailBackground.jpg';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Button from '@mui/material/Button';\nimport Checkbox from '@mui/material/Checkbox';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { saveShippingAddress } from 'actions/cartActions';\nimport Typography from '@mui/material/Typography';\nimport CheckoutSteps from 'components/CheckoutSteps/CheckoutSteps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShippingScreen = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const classes = useStyles();\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [phone, setPhone] = useState(shippingAddress.phone);\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      address,\n      city,\n      phone\n    }));\n    history.push('/payment');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    column: true,\n    md: 12,\n    className: classes.container,\n    style: {\n      background: `url(${image}) no-repeat center/cover`\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      className: classes.formController,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: submitHandler,\n        noValidate: true,\n        color: \"primary\",\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"address\",\n          label: \"\\u0410\\u0434\\u0440\\u0435\\u0441\",\n          name: \"address\",\n          autoComplete: \"address\",\n          autoFocus: true,\n          type: \"text\",\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"city\",\n          label: \"\\u0413\\u043E\\u0440\\u043E\\u0434\",\n          type: \"text\",\n          color: \"primary\",\n          id: \"city\",\n          value: city,\n          onChange: e => setCity(e.target.value),\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"phone\",\n          label: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n          type: \"text\",\n          color: \"primary\",\n          id: \"phone\",\n          value: phone,\n          onChange: e => setPhone(e.target.value),\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"link\",\n          style: {\n            width: '100%'\n          },\n          children: \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShippingScreen, \"mvzMVV1wiMNAQvCzpfzpbBKAsoA=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = ShippingScreen;\nexport default ShippingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"sources":["/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/ShippingScreen/ShippingScreen.jsx"],"names":["React","useState","useStyles","Container","Grid","image","Box","TextField","FormControlLabel","Button","Checkbox","Link","useSelector","useDispatch","saveShippingAddress","Typography","CheckoutSteps","ShippingScreen","history","classes","cart","state","shippingAddress","address","setAddress","city","setCity","phone","setPhone","dispatch","submitHandler","e","preventDefault","push","container","background","textAlign","formController","mt","target","value","width"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport useStyles from './styles'\nimport Container from '@mui/material/Container'\nimport Grid from '@mui/material/Grid';\nimport image from 'assets/detailBackground.jpg'\nimport Box from '@mui/material/Box'\nimport TextField from '@mui/material/TextField'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Button from '@mui/material/Button';\nimport Checkbox from '@mui/material/Checkbox';\nimport { Link  } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { saveShippingAddress } from 'actions/cartActions';\nimport Typography from '@mui/material/Typography'\nimport CheckoutSteps from 'components/CheckoutSteps/CheckoutSteps'\n\nconst ShippingScreen = ({ history }) => {\n  const classes = useStyles();\n\n  const cart = useSelector(state => state.cart);\n  const { shippingAddress } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [phone, setPhone] = useState(shippingAddress.phone);\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, phone }))\n    history.push('/payment')\n  }\n  return (\n    <Grid \n      container\n      column\n      md={12}\n      className={classes.container}\n      style={{\n        background: `url(${image}) no-repeat center/cover`,\n      }}\n    >\n      <Typography style={{textAlign:'center'}}>Доставка</Typography>\n      <CheckoutSteps step1 step2 />\n      <Grid\n        component='main'\n        maxWidth='xs'\n        className={classes.formController}\n      >\n        <Box\n            component='form'\n            onSubmit={submitHandler}\n            noValidate\n            color='primary'\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin='normal'\n              required\n              fullWidth\n              id='address'\n              label='Адрес'\n              name='address'\n              autoComplete='address'\n              autoFocus\n              type='text'\n              value={address}\n              onChange={e => setAddress(e.target.value)}\n            />\n            <TextField\n              margin='normal'\n              required\n              fullWidth\n              name='city'\n              label='Город'\n              type='text'\n              color='primary'\n              id='city'\n              value={city}\n              onChange={e => setCity(e.target.value)}\n              autoComplete='current-password'\n            />\n            <TextField\n              margin='normal'\n              required\n              fullWidth\n              name='phone'\n              label='Номер телефона'\n              type='text'\n              color='primary'\n              id='phone'\n              value={phone}\n              onChange={e => setPhone(e.target.value)}\n              autoComplete='current-password'\n            />\n            <Button\n              type='submit'\n              fullWidth\n              variant='link'\n              style={{ width: '100%' }}\n            >\n              Продолжить\n            </Button>\n          </Box>\n\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default ShippingScreen;\n\n"]},"metadata":{},"sourceType":"module"}
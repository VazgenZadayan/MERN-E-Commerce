{"ast":null,"code":"var _jsxFileName = \"/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/OrderListScreen/OrderListScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listOrders } from 'store/actions/orderActions';\nimport Loader from 'components/Loader';\nimport Table from '@mui/material/Table';\nimport Button from '@mui/material/Button';\nimport TableRow from '@mui/material/TableRow';\nimport Container from '@mui/material/Container';\nimport TableHead from '@mui/material/TableHead';\nimport TableCell from '@mui/material/TableCell';\nimport TableBody from '@mui/material/TableBody';\nimport Typography from '@mui/material/Typography';\nimport image from 'assets/detailBackground.jpg';\nimport useStyles from './styles';\nimport { useTranslations } from 'contexts/translation.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderListScreen = _ref => {\n  _s();\n\n  let {\n    location,\n    history\n  } = _ref;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    t\n  } = useTranslations();\n  const orderList = useSelector(state => state.orderList);\n  const {\n    loading,\n    orders\n  } = orderList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    md: 12,\n    className: classes.container,\n    style: {\n      background: `url(${image}) no-repeat center/cover`\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        fontSize: '40px',\n        textAlign: 'center'\n      },\n      children: t('orders')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      size: \"small\",\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: t('name')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: t('date')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: t('total_price')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: t('paid')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: t('delivered')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: order._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: order.user && order.user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: order.createdAt.substring(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: [\"$ \", order.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\",\n              style: {\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: order.isDelivered ? order.deliveredAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\",\n              style: {\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              component: Link,\n              to: `/order/${order._id}`,\n              className: \"btn-sm\",\n              variant: \"light\",\n              children: t('details')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderListScreen, \"lnZUZTRK0t4XjYwPrXmpxOzsLlU=\", false, function () {\n  return [useStyles, useDispatch, useTranslations, useSelector, useSelector];\n});\n\n_c = OrderListScreen;\nexport default OrderListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderListScreen\");","map":{"version":3,"sources":["/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/OrderListScreen/OrderListScreen.jsx"],"names":["React","useEffect","Link","useDispatch","useSelector","listOrders","Loader","Table","Button","TableRow","Container","TableHead","TableCell","TableBody","Typography","image","useStyles","useTranslations","OrderListScreen","location","history","classes","dispatch","t","orderList","state","loading","orders","userLogin","userInfo","isAdmin","push","container","background","fontSize","textAlign","minWidth","map","order","_id","user","name","createdAt","substring","price","isPaid","paidAt","color","isDelivered","deliveredAt"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listOrders } from 'store/actions/orderActions';\n\nimport Loader from 'components/Loader';\n\nimport Table from '@mui/material/Table';\nimport Button from '@mui/material/Button';\nimport TableRow from '@mui/material/TableRow';\nimport Container from '@mui/material/Container';\nimport TableHead from '@mui/material/TableHead';\nimport TableCell from '@mui/material/TableCell';\nimport TableBody from '@mui/material/TableBody';\nimport Typography from '@mui/material/Typography';\n\nimport image from 'assets/detailBackground.jpg';\n\nimport useStyles from './styles';\nimport { useTranslations } from 'contexts/translation.context';\n\nconst OrderListScreen = ({ location, history }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { t } = useTranslations();\n\n  const orderList = useSelector(state => state.orderList);\n  const { loading, orders } = orderList;\n\n  const userLogin = useSelector(state => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if(userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo]);\n \n  return (\n    <Container\n      md={12}\n      className={classes.container}\n      style={{ background: `url(${image}) no-repeat center/cover` }}\n    >\n      <Typography style={{ fontSize: '40px', textAlign: 'center' }}>\n        {t('orders')}\n      </Typography>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Table size='small' sx={{ minWidth: 650 }} aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              <TableCell align='center'>ID</TableCell>\n              <TableCell align='center'>{t('name')}</TableCell>\n              <TableCell align='center'>{t('date')}</TableCell>\n              <TableCell align='center'>{t('total_price')}</TableCell>\n              <TableCell align='center'>{t('paid')}</TableCell>\n              <TableCell align='center'>{t('delivered')}</TableCell>\n              <TableCell align='center'></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {orders.map(order => (\n              <TableRow key={order._id}>\n                <TableCell align='center'>{order._id}</TableCell>\n                <TableCell align='center'>\n                  {order.user && order.user.name}\n                </TableCell>\n                <TableCell align='center'>{order.createdAt.substring(0, 10)}</TableCell>\n                <TableCell align='center'>$ {order.price}</TableCell>\n\n                <TableCell align='center'>{order.isPaid ? (\n                  order.paidAt.substring(0, 10)\n                ) : (\n                  <i className='fas fa-times' style={{color: 'red'}}></i>\n                )}\n                </TableCell>\n                <TableCell align='center'>{order.isDelivered ? (\n                  order.deliveredAt.substring(0, 10)\n                ) : (\n                  <i className='fas fa-times' style={{color: 'red'}}></i>\n                )}\n                </TableCell>\n                <TableCell align='center'>\n                <Button\n                    component={Link}\n                    to={`/order/${order._id}`}\n                    className='btn-sm'\n                    variant='light'\n                  >\n                   {t('details')}\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </Container>\n  );\n};\n\nexport default OrderListScreen;\n"]},"metadata":{},"sourceType":"module"}
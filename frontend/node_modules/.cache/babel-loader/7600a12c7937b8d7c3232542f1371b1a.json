{"ast":null,"code":"import axios from 'axios';\nimport { CART_CLEAR_ITEMS } from 'store/constants/cartConstants';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_PAY_REQUEST, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_FAIL, ORDER_LIST_SUCCESS, ORDER_LIST_REQUEST, ORDER_DELIVER_FAIL, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_REQUEST } from 'store/constants/orderConstants';\nimport { logout } from 'store/actions/userActions';\nimport { toast } from 'react-toastify';\naxios.interceptors.response.use(config => {\n  if (config.status >= 400) {\n    toast.error(config.data.message);\n  }\n\n  return config;\n});\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    toast.success('Order Created Successfully');\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n    toast.success('Payment was successful');\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deliverOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config);\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/store/actions/orderActions.js"],"names":["axios","CART_CLEAR_ITEMS","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_FAIL","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_PAY_FAIL","ORDER_PAY_SUCCESS","ORDER_PAY_REQUEST","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_FAIL","ORDER_LIST_SUCCESS","ORDER_LIST_REQUEST","ORDER_DELIVER_FAIL","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_REQUEST","logout","toast","interceptors","response","use","config","status","error","data","message","createOrder","order","dispatch","getState","type","userLogin","userInfo","headers","Authorization","token","post","payload","success","localStorage","removeItem","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","deliverOrder","_id","listMyOrders","listOrders"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { CART_CLEAR_ITEMS } from 'store/constants/cartConstants'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n} from 'store/constants/orderConstants'\nimport { logout } from 'store/actions/userActions'\nimport { toast } from 'react-toastify';\n\naxios.interceptors.response.use((config) => {\n  if (config.status >= 400) {\n    toast.error(config.data.message);\n  }\n  return config;\n})\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/orders`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n    toast.success('Order Created Successfully');\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data,\n    })\n    localStorage.removeItem('cartItems')\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n    toast.success('Payment was successful')\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/UserEditScreen/UserEditScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserDetails } from 'actions/userActions';\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport image from 'assets/detailBackground.jpg';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserEditScreen = _ref => {\n  _s();\n\n  let {\n    location,\n    history\n  } = _ref;\n  const classes = useStyles();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userRegister;\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    container: true,\n    className: classes.container,\n    style: {\n      background: `url(${image}) no-repeat center/cover`\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      className: classes.formController,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            bgcolor: 'secondary.main',\n            borderRadius: '0'\n          },\n          className: classes.logo,\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.title,\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          onSubmit: submitHandler,\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"given-name\",\n                name: \"firstName\",\n                required: true,\n                fullWidth: true,\n                id: \"firstName\",\n                label: \"\\u0418\\u043C\\u044F\",\n                type: \"name\",\n                value: name,\n                onChange: e => setName(e.target.value),\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"email\",\n                label: \"Email \\u0410\\u0434\\u0440\\u0435\\u0441\",\n                type: \"email\",\n                name: \"email\",\n                autoComplete: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n                type: \"password\",\n                id: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                autoComplete: \"new-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"confirmPassword\",\n                label: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n                type: \"password\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"link\",\n            style: {\n              width: '100%',\n              marginTop: '30px'\n            },\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserEditScreen, \"sNbrVeg7cu/Jp+OV3tsJFHww3oA=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/UserEditScreen/UserEditScreen.jsx"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","getUserDetails","Loader","Message","Box","Grid","Avatar","Button","TextField","Container","LockOutlinedIcon","image","useStyles","UserEditScreen","location","history","classes","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userRegister","state","loading","error","userInfo","redirect","search","split","push","submitHandler","e","preventDefault","register","container","background","formController","display","flexDirection","alignItems","bgcolor","borderRadius","logo","title","mt","target","value","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserDetails } from 'actions/userActions';\n\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\n\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nimport image from 'assets/detailBackground.jpg';\n\nimport useStyles from './styles';\n\nconst UserEditScreen = ({ location, history }) => {\n  const classes = useStyles();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector(state => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <Container\n      container\n      className={classes.container}\n      style={{ background: `url(${image}) no-repeat center/cover` }}\n    >\n      <Container\n        component='main'\n        maxWidth='xs'\n        className={classes.formController}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar\n            sx={{ bgcolor: 'secondary.main', borderRadius: '0' }}\n            className={classes.logo}\n          >\n            <LockOutlinedIcon />\n          </Avatar>\n          <h3 className={classes.title}>Sign up</h3>\n          {message && <Message variant='danger'>{message}</Message>}\n          {error && <Message variant='danger'>{error}</Message>}\n          {loading && <Loader />}\n          <Box\n            component='form'\n            noValidate\n            onSubmit={submitHandler}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete='given-name'\n                  name='firstName'\n                  required\n                  fullWidth\n                  id='firstName'\n                  label='Имя'\n                  type='name'\n                  value={name}\n                  onChange={e => setName(e.target.value)}\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id='email'\n                  label='Email Адрес'\n                  type='email'\n                  name='email'\n                  autoComplete='email'\n                  value={email}\n                  onChange={e => setEmail(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name='password'\n                  label='Введите пароль'\n                  type='password'\n                  id='password'\n                  value={password}\n                  onChange={e => setPassword(e.target.value)}\n                  autoComplete='new-password'\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id='confirmPassword'\n                  label='Подтвердите пароль'\n                  type='password'\n                  value={confirmPassword}\n                  onChange={e => setConfirmPassword(e.target.value)}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type='submit'\n              fullWidth\n              variant='link'\n              style={{ width: '100%', marginTop: '30px' }}\n            >\n              Update\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </Container>\n  );\n};\n\nexport default UserEditScreen;\n"]},"metadata":{},"sourceType":"module"}
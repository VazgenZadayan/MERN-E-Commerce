{"ast":null,"code":"var _jsxFileName = \"/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/UserListScreen/UserListScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listUsers, deleteUser } from 'store/actions/userActions';\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\nimport { useTranslations } from 'contexts/translation.context';\nimport Table from '@mui/material/Table';\nimport Button from '@mui/material/Button';\nimport TableRow from '@mui/material/TableRow';\nimport Container from '@mui/material/Container';\nimport TableHead from '@mui/material/TableHead';\nimport TableCell from '@mui/material/TableCell';\nimport TableBody from '@mui/material/TableBody';\nimport Typography from '@mui/material/Typography';\nimport image from 'assets/detailBackground.jpg';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = _ref => {\n  _s();\n\n  let {\n    location,\n    history,\n    match\n  } = _ref;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    t\n  } = useTranslations();\n  const userList = useSelector(state => state.userList);\n  const {\n    loading,\n    error,\n    users\n  } = userList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  console.log('match::', userInfo);\n  const userDelete = useSelector(state => state.userDelete);\n  const {\n    success: successDelete\n  } = userDelete;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo, successDelete]);\n\n  const deleteHandler = id => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteUser(id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    md: 12,\n    className: classes.container,\n    style: {\n      background: `url(${image}) no-repeat center/cover`\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        fontSize: '40px',\n        textAlign: 'center'\n      },\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      size: \"small\",\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: t('name')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: t('email_address')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: t('admin')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: user._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: user.isAdmin ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-check\",\n              style: {\n                color: 'green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\",\n              style: {\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              component: Link,\n              to: `/admin/user/${user._id}/edit`,\n              className: \"btn-sm\",\n              variant: \"light\",\n              children: t('edit')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-sm\",\n              variant: \"light\" // disabled={user.id === match}\n              ,\n              onClick: () => deleteHandler(user._id),\n              children: t('delete')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"uouADUgtN0r4KuYmQPnKYAy4D10=\", false, function () {\n  return [useStyles, useDispatch, useTranslations, useSelector, useSelector, useSelector];\n});\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/vazgenzadayan/Documents/Projects/online_shop/frontend/src/screens/UserListScreen/UserListScreen.jsx"],"names":["React","useEffect","Link","useDispatch","useSelector","listUsers","deleteUser","Loader","Message","useTranslations","Table","Button","TableRow","Container","TableHead","TableCell","TableBody","Typography","image","useStyles","UserList","location","history","match","classes","dispatch","t","userList","state","loading","error","users","userLogin","userInfo","console","log","userDelete","success","successDelete","isAdmin","push","deleteHandler","id","window","confirm","container","background","fontSize","textAlign","minWidth","map","user","_id","name","email","color"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listUsers, deleteUser } from 'store/actions/userActions';\n\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\nimport { useTranslations } from 'contexts/translation.context'\n\nimport Table from '@mui/material/Table';\nimport Button from '@mui/material/Button';\nimport TableRow from '@mui/material/TableRow';\nimport Container from '@mui/material/Container';\nimport TableHead from '@mui/material/TableHead';\nimport TableCell from '@mui/material/TableCell';\nimport TableBody from '@mui/material/TableBody';\nimport Typography from '@mui/material/Typography';\n\nimport image from 'assets/detailBackground.jpg';\n\nimport useStyles from './styles';\n\nconst UserList = ({ location, history, match }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { t } = useTranslations();\n\n  const userList = useSelector(state => state.userList);\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector(state => state.userLogin);\n  const { userInfo } = userLogin;\n\n  console.log('match::', userInfo)\n\n  const userDelete = useSelector(state => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if(userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo, successDelete]);\n\n  const deleteHandler = (id) => {\n    if(window.confirm('Are you sure')) {\n      dispatch(deleteUser(id))\n    }\n  }\n \n  return (\n    <Container\n      md={12}\n      className={classes.container}\n      style={{ background: `url(${image}) no-repeat center/cover` }}\n    >\n      <Typography style={{ fontSize: '40px', textAlign: 'center' }}>\n        Users\n      </Typography>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table size='small' sx={{ minWidth: 650 }} aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              <TableCell align='center'>ID</TableCell>\n              <TableCell align='center'>{t('name')}</TableCell>\n              <TableCell align='center'>{t('email_address')}</TableCell>\n              <TableCell align='center'>{t('admin')}</TableCell>\n              <TableCell align='center'></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.map(user => (\n              <TableRow key={user._id}>\n                <TableCell align='center'>{user._id}</TableCell>\n                <TableCell align='center'>\n                  {user.name}\n                </TableCell>\n                <TableCell align='center'>{user.email}</TableCell>\n                <TableCell align='center'>{user.isAdmin ? (\n                  <i className='fas fa-check' style={{color: 'green'}}></i>\n                ) : (\n                  <i className='fas fa-times' style={{color: 'red'}}></i>\n                )}</TableCell>\n                <TableCell align='center'>\n                <Button\n                    component={Link}\n                    to={`/admin/user/${user._id}/edit`}\n                    className='btn-sm'\n                    variant='light'\n                  >\n                   {t('edit')}\n                  </Button>\n                  <Button\n                    className='btn-sm'\n                    variant='light'\n                    // disabled={user.id === match}\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                   {t('delete')}\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </Container>\n  );\n};\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}